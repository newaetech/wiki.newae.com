== Setting up the Hardware ==

This tutorial uses the [[CW1002_ChipWhisperer_Capture_Rev2]] hardware along with the [[CW301_Multi-Target]] board. This hardware is the standard setup for all basic tutorials.

This example uses the Atmel AVR in 28-pin DIP programmed with a ''simpleserial'' communications protocol. This is the default firmware programmed into the devices, so you shouldn't need to do anything. If you've erased the device, you can see programming instructions in the [[Installing_ChipWhisperer]] section.

The Multi-Target board should be plugged into the ChipWhisperer Capture Rev2 via the 20-pin target cable. The ''VOUT'' SMA connector is wired to the ''LNA'' input on the ChipWhisperer-Capture Rev2 front panel. The general hardware setup is as follows:

<blockquote>[[File:hw-1.jpg|image]]

# 20-Pin Header connects Multi-Target to Capture Hardware
# VOUT Connects to SMA Cable
# SMA Cable connects to 'LNA' on CHA input
# USB-Mini connects to side (NB: Confirm jumper settings in next section first)
</blockquote>
Jumpers on the Multi-Target Victim board are as follows:

<blockquote>[[File:hw-2.jpg|600px|image]]

# NO jumpers mounted in XMEGA Portion or SmartCard Portion (JP10-JP15, JP19, JP7-JP8, JP17)
# 3.3V IO Level (JP20 set to INT.)
# The 7.37 MHz oscillator is selected as the CLKOSC source (JP18)
# The CLKOSC is connected to the AVR CLock Network, along with connected to the FPGAIN pin (JP4)
# The TXD &amp; RXD jumpers are set (JP5, JP6)
# Power measurement taken from VCC shunt (JP1)
# The TRIG jumper is set (JP28) (NOTE: Early revisions of the multi-target board do not have the TRIG jumper and you can ingore this).

For more information on these jumper settings see [[CW301_Multi-Target]] .
</blockquote>

== Setting up the Software ==

It is assumed that you've already followed the guide in [[Installing_ChipWhisperer]]. Thus it is assumed you are able to communicate with the ChipWhisperer Capture Rev2 hardware (or whatever capture hardware you are using). Note in particular you must have configured the FPGA bitstream in the ChipWhisperer-Capture software, all part of the description in the installing guide.

Assuming this setup is complete, you can confirm you are able to communicate with the hardware by running the example capture of traces given in the [[Tutorial_B5_Breaking_AES_(Straightforward)]].



== Programming the Example ==

<ol style="list-style-type: decimal;">
<li>We assume the hardware is already connected as at the beginning of this tutorial. If not go back &amp; confirm this hardware setup.</li>
<li>Next, you will need to program the AVR itself. On Windows we will make use of the free [http://www.atmel.com/tools/STUDIOARCHIVE.aspx Atmel Studio 4.19]. You can find a direct link here: [http://www.atmel.com/System/BaseForm.aspx?target=tcm:26-17924 Direct Link to Atmel Studio 4.19 Binary] which will require you to enter an email address to receive the download link. Note it is possible to use <code>avrdude</code>, a command-line program which is part of WinAVR instead if you wish. However since many people find the graphical interface of AVRStudio easier, this guide will use AVRStudio. Be sure to install the USB drivers as part of the package.</li>
<li>Plug in the USB-A Connector on the rear side of the ChipWhisperer Rev2. This should trigger the driver installation, which will detect the device as a ''AVR-ISP MK2''. You can leave the USB-Mini cable plugged in during this operation, or unplug the USB-Mini cable from the ChipWhisperer &amp; plug in the USB-A cable.</li>
<li><p>Once AVR Studio is installed, open the main window. From the toolbar select either the ''Con'' or ''AVR'' icon, and select the ''AVR-ISP MK-II'' Device:</p>
<p>[[File:studio4-connect.png|image]]</p></li>
<li><p>In the window that opens, select the ''Main'' tab. Select the device type as ''AtMega328P'', and hit ''Read Signature''. You should get an indication that the device signature was successfully read!</p>
<p>[[File:studio4-read-signature.png|image]]</p></li>
<li><p>Finally we can program the chip. To do so switch to the ''Program'' tab, select the <code>simpleserial_nocrypto.hex</code> file that was generated in Step 4, and hit ''Program''. If it's successful you should see some output data saying so.</p>
<p>[[File:studio4-program.png|image]]</p></li></ol>

<blockquote>'''warning'''

Be sure to select the correct .hex file! Otherwise the system won't work &amp; it can be frusturating to troubleshoot. It's a good idea to look at the 'last modified' date which shows up when you go to select the file. Check that it roughly corresponds to when you compiled the file.
</blockquote>
That's it! You've now built a custom application &amp; programmed it into the AVR. We haven't yet verified it's working, which is the next step.

== Communicating from CW-Capture Software ==

Next, open the CW-Capture software. Then perform the following steps:

[[File:genericsetup.png|image]]

# Switch to the ''General Settings'' tab
# As the ''Scope Module'', select the ''ChipWhisperer/OpenADC'' option
# As the ''Target Module'', select the ''Simple Serial'' option

Next, you'll have to configure the target module:

[[File:targetsetup.png|image]]

<ol start="4" style="list-style-type: decimal;">
<li>Switch to the ''Target Settings'' tab</li>
<li>As the ''connection'', select the ''ChipWhisperer'' option</li></ol>

Now, download the FPGA Firmware:

[[File:downloadfpga.png|image]]

<ol start="6" style="list-style-type: decimal;">
<li>Optional: Run the ''Download CW Firmware'' tool. You should have configured this already before. Note that from release 0.09 of ChipWhisperer the FPGA is automatically programmed when you attempt to connect, so you can skip this step if using a recent release (i.e. any release in 2015 or later).</li>
<li>If you switch to the ''Debug Logging'' output, you should see an indication the FPGA was programmed. If you were already using the device, it will skip the download. Normally you can skip steps 6 &amp; 7 if you've already performed the FPGA download once since powering on the device. Note that</li></ol>

[[File:connect.png|image]]

<ol start="8" style="list-style-type: decimal;">
<li>Press the button labeled ''Master: DIS'', where DIS has a circle around it. If it works, it will switch to green and say ''CON''.</li></ol>

[[File:connect_run.png|image]]

<ol start="9" style="list-style-type: decimal;">
<li>Switch to the ''General Settings'' tab.</li>
<li>Hit the ''Open Monitor'' button.</li>
<li>Resize the monitor window. The monitor will show sent &amp; received data to the target.</li>
<li>Hit the ''Run 1'' button. You may have to hit it a few times, as the very first serial data is often lost. You should see data populate in the ''Text Out'' field of the monitor window. Note that each byte of the ''Text In'' is incremented in the ''Text Out'' field.</li></ol>
