{{Warningbox|This tutorial has been updated for ChipWhisperer 4.0.0 release. If you are using 3.x.x see the "V3" link in the sidebar.}}

{{Infobox tutorial
|name                   = B5: Breaking AES (Straightforward)
|image                  = 
|caption                = 
|software versions      =
|capture hardware       = CW-Lite, CW-Lite 2-Part, CW-Pro
|Target Device          = 
|Target Architecture    = XMEGA
|Hardware Crypto        = No
|Purchase Hardware      = 
}}

This tutorial will take you through a complete attack on a software AES implementation. The specific implementation being attacked is a well-known AES implementation written in C, which is likely to be similar to other implementations used by proprietary systems.

= Capturing =
This tutorial runs on four different hardware targets. You only need to follow the steps for your given hardware.

== Capturing with ChipWhisperer-Lite/Pro with default XMEGA Target (CW303) ==

WARNING: This video was recorded with API V3.x, some changes happened so please take note.
NOTE: You can see a Quick-Start Guide and Video for this target on the [[CW1173_ChipWhisperer-Lite]] page:

[[File:Cwlite_demo_video.png|link=http://www.youtube.com/watch?v=MJmkYqA-LeM&hd=1]]

=== Hardware Setup ===

<ol style="list-style-type: decimal;">
<li><p>Connect the CW1173/CW1200 by USB cable to computer.</p>
<blockquote><p>[[File:cw1173_microusb.jpg|image]]</p></blockquote>
</li>
<li> The software AES implementation that will run on the target is located in <code>chipwhisperer\hardware\victims\firmware\simpleserial-aes</code>. In a terminal window, navigate here and run the command <code>make</code> to build the firmware. 

As in previous tutorials, ensure that the firmware has been built for the correct board. Here, the output of <code>make</code> should end like
<pre>
AVR Memory Usage
----------------
Device: atxmega128d3

Program:    3078 bytes (2.2% Full)
(.text + .data + .bootloader)

Data:        352 bytes (4.3% Full)
(.data + .bss + .noinit)


Built for platform CW-Lite XMEGA

-------- end --------
</pre>
Make sure that the platform is correct.
</li>

<li> Upload the firmware to the target chip. The process to do this is the same as the previous tutorials:
* Open the ChipWhisperer Capture software.
* Connect to the ChipWhisperer. (You can do this using a script or by filling out the generic settings and connecting to the board yourself.)
* Open the XMEGA Programmer (**Tools > ChipWhisperer-Lite XMEGA Programmer**).
* Find the hex file you compiled and program it onto the target.
</li>
</ol>

=== Capturing the Traces ===

[[File:cwsetup_scriptselection.png|889x889px]]

# Switch to the ''Python Console'' tab.
# The script selection window (2) lists available example scripts. Scroll down to "connect_cwlite_simpleserial.py" and click on it.
# You will see the script contents appear in the "Script Preview" window (3). You can either hit the "Run" button or double-click the filename of the script to execute it. Do either of those now.

The window should change to indicate the connect succeeded:

[[File:cwsetup_scriptselection_cwliterun.png|889x889px]]

<p>
<ol start="4" style="list-style-type: decimal;">
<li>The console lists the exact script that is executed. Note you could have manually executed the script commands line-by-line in this console.</li>
<li>The "Scope" and "Target" buttons will show as connected.</li>
<li>The Status Bar will show a connection.</li>
</ol>
</p>
Note in previous software versions, this tutorial took you through manual setup. This can still be done (using the GUI), but instead now the API has been made more powerful, so the example configuration script will be used instead.

To do so, simply scroll down and select the "setup_cwlite_xmega_aes.py" file:

[[File:cwsetup_scriptselection_xmegaconfig_cwliterun.png]]

<p>To complete the tutorial, follow these steps:</p>
<ol start="7" style="list-style-type: decimal;">
<li>Switch to the ''General Settings'' tab</li>
<li>If you wish to change the number of traces, do so here. The default of 50 should be sufficient to break AES though!</li>
<li>Hit the ''Capture Many'' button (M in a green triangle) to start the capture process.</li>
<li>You will see each new trace plotted in the waveform display.</li>
<li>You'll see the trace count in the status bar. Once it says ''Trace 50 done'' (assuming you requested 50 traces) the capture process is complete.</li>
<li>Finally save this project using the ''File --&gt; Save Project'' option, give it any name you want.</li>
<li>Skip ahead to [[#Analyzing_the_Traces]].</li></ol>

== Capturing with ChipWhisperer-Lite/Pro with NOTDuino (CW304) ==

=== Hardware Setup ===

<ol style="list-style-type: decimal;">
<li>Set jumpers on NOTDuino to default position (see silkscreen on bottom of NOTDuino for default positions).</li>
<li>Connect the NOTDuino using the SMA cable on the &quot;measure&quot; port, and the 20-pin IDC cable:</li>
<li><p>Connect the CW1173/CW1200 by USB cable to computer.</p>
<p>[[File:cw1173_avr_microusb.jpg|image]]</p></li></ol>

=== Capturing the Traces ===

<ol style="list-style-type: decimal;">
<li>Close &amp; reopen the capture software (to clear out any previous connection which may be invalid).</li>
<li><p>From the ''Project'' menu elect the ''Example Scripts'' and then ''ChipWhisperer-Lite: AES SimpleSerial on ATMega328P''</p>
<p>[[File:runscript_cw1173avr.png|image]]</p></li>
<li><p>The script will automatically connect to the capture hardware and run 2 example traces. You should see something that looks like the following screen:</p>
<p>[[File:capture.png|image]]</p>
<p>To complete the tutorial, follow these steps:</p>
<blockquote><ol style="list-style-type: decimal;">
<li>Switch to the ''General Settings'' tab</li>
<li>If you wish to change the number of traces, do so here. The default of 50 should be sufficient to break AES though!</li>
<li>Hit the ''Capture Many'' button (M in a green triangle) to start the capture process.</li>
<li>You will see each new trace plotted in the waveform display.</li>
<li>You'll see the trace count in the status bar. Once it says ''Trace 50 done'' (assuming you requested 50 traces) the capture process is complete.</li></ol>
</blockquote></li>
<li>Finally save this project using the ''File --&gt; Save Project'' option, give it any name you want.</li>
<li>Skip ahead to [[#Analyzing_the_Traces]].</li></ol>

== Capturing with PicoScope + Multi-Target (CW301) ==

&lt;TODO&gt;

= Analyzing the Traces =

<ol style="list-style-type: decimal;">
<li>Open the Analyzer software</li>
<li>From the ''File --> Open Project'' option, navigate to the .cwp file you save previously. Open this file.</li>
<li><p>Select the ''Project --> Manage Traces'' option to open the dialog, enable the captured traces by adding a check-mark in the box. Close the dialog with `ESC`:</p>
<p>[[File:tracemanage.png|image]]</p></li>
<li><p>If you wish to view the trace data, follow these steps:</p>

<ol style="list-style-type: decimal;">
<li>Switch to the ''Waveform Display'' tab</li>
<li>Switch to the ''General'' parameter setting tab</li>
<li>You can choose to plot a specific range of traces</li>
<li>Hit the ''Redraw'' button when you change the trace plot range</li>
<li>You can right-click on the waveform to change options, or left-click and drag to zoom</li>
<li>(oops there is no 6)</li>
<li>Use the toolbar to quickly reset the zoom back to original</li></ol>

<p>[[File:traceplotting.png|image]]</p></li>
<li><p>You can view or change the attack options on the ''Attack'' parameter settings tab:</p>
<ol style="list-style-type: decimal;">
<li>The ''Hardware Model'' settings are correct for the software AES by default</li>
<li>The ''Point Setup'' makes the attack faster by looking over a more narrow range of points. Often you might have to characterize your device to determine the location of specific attack points of interest.</li>
<li>''Traces per Attack'' allows you to use only a subset of capture traces on each attack. Or if you have for example 1000 traces, you could average the results of attacking 50 traces over 200 attack runs.</li>
<li>''Reporting Interval'' is how often data is generated. A smaller interval generates more useful output data, but greatly increases computational complexity (e.g. slows down attack). If you only care about attacking the system, the reporting interval can be set to the number of traces. In which case the attack runs completely, and you get the results. For this tutorial you can set to a smaller number (such as 5).</li></ol>

<p>[[File:attacksettings.png|image]]</p></li>
<li><p>Finally run the attack by switching to the ''Results Table'' tab and then hitting the ''Attack'' button:</p>
<p>[[File:attack.png|image]]</p></li>
<li><p>If you adjusted the ''Reporting Interval'' to a smaller number such as 5, you'll see the progression of attack results as more traces are used. If not you should simply see the final results, which should have the correct key highlighted in red. In the following case the correct key ''was'' recovered:</p>
<p>[[File:attack-done.png|image]]</p></li>
<li><p>You can also switch to the ''Output vs Point Plot'' window to see ''where'' exactly the data was recovered:</p>
<ol style="list-style-type: decimal;">
<li>Switch to the ''Output vs Point Plot'' tab</li>
<li>Turn on one of the bytes to see results.</li>
<li>The ''known correct'' guess for the key is highlighted in red. The wrong guesses are plotted in green. You can see that the attacked operation appeared to occur around sample 40 for key 0. Remember you can click-drag to zoom in, then right-click and select ''View All'' to zoom back out.</li>
<li>Turn on another byte to see results for it.</li>
<li>This byte occured much later - sample 1240. By exploring where the maximum correlation was found for the correct key-guess of each byte, you can determine where exactly the attacked operation occured.</li></ol>

<p>[[File:attack-done2.png|image]]</p></li></ol>

= Next Steps =

This has only briefly outlined how to perform a CPA attack. You can move onto more advanced tutorials, especially showing you how the actual attack works when performed manually.

{{Template:Tutorials}}
[[Category:Tutorials]]
